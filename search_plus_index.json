{"./":{"url":"./","title":"HEXO简介","keywords":"","body":"HEXO简介 Hexo是一款快速、简洁并基于Node.js的静态博客框架，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。大家可以进入hexo官网进行详细的查看。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:48:18 "},"Chart1.html":{"url":"Chart1.html","title":"第一章：Hexo搭建","keywords":"","body":" 第一节——安装Git： 第二节——安装Nodejs： 第三节——安装Hexo： 第四节——Github注册与创建： 第五节——SSH相关配置 第六节——Hexo部署到Github 第七节——发布文章 第八节——Hexo常用命令 前言 [!Tip] 本次Hexo搭建过程适用于Windows系统，希望能帮助大家 本章节主要讲述如何搭建Hexo，关于搭建我也是从小白一步步走过来的，其中遇到了很多了坑，以至于写下如此详细的搭建步骤，本次搭建我写了八个小节，分为三个部分，在每个小节里分为Step1,Step2,Step3.......，步骤比较详细。 第一节——安装Git： Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。目前我用到的就是用来管理hexo博客文章的的上传，克隆完整github仓库信息，通过命令创建分支，合并分支，和使用git bash命令窗口。关于更多的详细信息可点击了解Git。Git非常强大，还有很多功能，这里是关于Git教程,想了解的可以进行了解。 第二节——安装Nodejs： Hexo是基于nodejs编写的，所以需要安装一下nodejs和里面的npm工具。想进行了解可进入nodejs中文网. 第三节——安装Hexo： 这一步完成可以初步预览属于你的博客样式，这一步是基于git和nodejs安装完之后开始执行的。 第四节——Github注册与创建： Github是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。这里注册github和创建仓库是因为我们要是用github同步我们博客的相关文件，后续还可以绑定域名。想进行相关了解可点击github详情. 第五节——SSH相关配置 SSH（Secure Shell）是一种通用的、功能强大的、基于软件的网络安全解决方案。计算机每次向网络发送数据时，SSH都会自动对其进行加密。数据到达目的地时，SSH自动对加密数据进行解密，用于保护我们的网络信息。从客户端来看，SSH提供两种级别的安全验证第一种级别（基于口令的安全验证），第二种级别（基于密匙的安全验证），我们用的是第二种级别依靠密匙，这种安全程度较高。第二种级别不仅加密所有传送的数据，而且“中间人”这种攻击方式也是不可能的（因为他没有你的私人密匙）。但是整个登录的过程可能需要10秒。所以要进行SSH配置以保护我们的网络信息安全。 第六节——Hexo部署到Github 前面部分我们的博客只能在本地浏览，别人无法通过网络来浏览你的博客，这一步部署就是让自己的博客真正“活起来”。这里我们要用到Github Pages获得一个免费使用的域名，当然也可以自己在阿里云上购买一个域名，后续域名的操作我会有相关的简绍。 第七节——发布文章 这一步需要你了解Markdown语法，来进行文章编写，编辑器有很多，在现编辑或下载一些软件都可以。 第八节——Hexo常用命令 这是在发布博文和本地预览进行的一些常用的命令。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 23:08:27 "},"FlowChart1.html":{"url":"FlowChart1.html","title":"流程简绍","keywords":"","body":" Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-08 19:04:54 "},"GitDownload.html":{"url":"GitDownload.html","title":"一.安装Git","keywords":"","body":" 一.安装Git Step1：下载 Step2：安装 Step3：检查git是否安装成功 一.安装Git Step1：下载 点击Git官网下载，根据你的电脑的操作系统选择对应的。 Step2：安装 在安装过程中一路next。 Step3：检查git是否安装成功 在CMD窗口（R+win输入cmd即可打开CMD窗口)输入指令： git 结果如下： 到这里git就安装好了，这时会有一个Git Bash的命令工具（鼠标右击就会出现）。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 23:09:03 "},"NodejsDownload.html":{"url":"NodejsDownload.html","title":"二.安装Nodejs","keywords":"","body":" 二.安装Nodejs Step1：下载 Step2：安装 Step3：检查是否成功 二.安装Nodejs Step1：下载 进入nodejs下载，根据自己的电脑选择32位或64位。 Step2：安装 在安装过程中一路next。 Step3：检查是否成功 在CMD窗口（R+win输入cmd即可打开CMD窗口)输入指令： | node -v | npm -v 结果显示如下代表安装成功: Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:47:48 "},"HexoDownload.html":{"url":"HexoDownload.html","title":"三.安装Hexo","keywords":"","body":" 三.安装Hexo Step1：安装Hexo Step2：检验是否安装成功 Step3：初始化网址 Step4：安装网址所需要的依赖插件 Step5：生成静态网页和开启本地服务 三.安装Hexo 前面git和nodejs安装好后，就可以安装hexo博客框架了。 首先创建一个文件夹，命名为你想要的名字，我的名字是blog，这个文件夹在后续就是用来存放你所创建博客的所有文件。这个文件也称根目录。 Step1：安装Hexo 在这个blog文件夹（你所创建的文件夹）下直接鼠标右键git bash打开，这个时候会有命令窗口弹出。或者（win+r）输入cmd，然后cd到你创建的blog文件夹。 在窗口中输入： npm install -g hexo-cli 然后等待安装，过程如下，这个过程需要的等待，请耐心。 Step2：检验是否安装成功 在窗口中接着输入hexo -v来检验是否安装成功 hexo -v 结果显示： 至此已全部安装完。 Step3：初始化网址 在窗口中接着输入： hexo init 这个过程可能会比较慢，请耐心等待 最后尾部结果如下： added 432 packages in 59.037s INFO Start blogging with Hexo! 表明初始化已成功。 Step4：安装网址所需要的依赖插件 在窗口中接着输入： npm install 完成后，在你的根目录（blog文件夹）下会出现以下文件： 在这里解释一下： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 _config.yml: 博客的配置文件 db.json：source解析所得到的 package.json：项目所需模块项目的配置信息 Step5：生成静态网页和开启本地服务 在窗口中接着输入： hexo g//生成静态网址 hexo s//开启本地服务器 结果显示： 在浏览器输入网址http://localhost:4000就可以查看你的本地博客网页了。 页面如下： 如果想关闭本地服务，Ctrl+C 就可以了 或者关闭这个命令窗口。 注：每次想浏览你的本地博客都需在你的根目录下鼠标右击打开git bash 在窗口中输入hexo s命令字符。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:47:23 "},"GithubCreate.html":{"url":"GithubCreate.html","title":"四.Github注册与创建","keywords":"","body":" 四.Github注册与创建 Step1：注册github Step2：创建仓库 四.Github注册与创建 Step1：注册github 首先你要在github上注册一个账号，步骤如下： 1.点击Sign up进行注册。 2.进入Step1，填写用户名，Email,密码。后面会有验证，会通过qq邮箱发送给你，进行验证。 3.进入Step2，选择仓库。 步骤4：进入Step3，让你做一些选择，完善一些信息。也可以直接跳过步骤，这样你的账号就注册好了。 Step2：创建仓库 注册完上面步骤后登录，进行以下创建仓库步骤： 1.点击new repository新建 2.创建一个和你用户名相同的仓库，如：你的用户名+.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别,也就是xxxx.github.io其中xxx就是你注册GitHub的用户名。我这里是已经建过了,所以会提示。 这样你的仓库就创建好了。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:47:10 "},"SshDeploy.html":{"url":"SshDeploy.html","title":"五.SSH配置","keywords":"","body":"五.SSH配置 因为需要部署到你的github仓库，每次更改都要deploy ，如果不配置ssh key 每次你都需要输入github 账号密码，太过烦琐。 Step1.生成SSH 回到你根目录下的git bash窗口中，输入代码： git config --global user.name \"yourname\"//yourname填写你的github用户名 git config --global user.email \"youremail\"//youremail填写你的github的邮箱 上面的yourname 和 youremail分别指你的github用户名以及github绑定的邮箱。 可以用以下两条，检查一下你有没有输对： git config user.name git config user.email 然后在执行如下命令生成秘钥和公钥: ssh-keygen -t rsa -C \"youremail\" 执行了这个命令会提示你秘钥和公钥存储路径和密码以及确认密码，你连续按三次Enter就好。 Enter file in while to save the key(/C/Users/......) 执行命令时会有上面所示的代码，这就是你的秘钥和公钥的存储路径，按照所提示的路径打开id_rsa.pub，将里面所有的内容全部复制出来。 注:id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 Step2：添加到github 到你的github主页点击右上角头像，setting -> SSH and GPG keys，新建SSH key。 这里的title可以随便填写，我填的是我的用户名。key里面要把你的id_rsa.pub里面的信息复制进去，然后点击Add SSH key。 这里验证一下是否连接成功，在根目录下的git bash中输入： ssh -T git@github.com 会有如下提示： The authenticity of host 'github.com (52.74.223.119)' can't be established. RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. Are you sure you want to continue connecting (yes/no)? 输入：yes，会有以下提示： Hi yremp2! You've successfully authenticated, but GitHub does not provide shell access. 这表示配置成功，就可以下一步操作了。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:48:28 "},"HexoGithubDeploy.html":{"url":"HexoGithubDeploy.html","title":"六.Hexo部署到Github","keywords":"","body":" 六.Hexo部署到Github Step1：修改配置文件 Step2：开始部署 六.Hexo部署到Github Step1：修改配置文件 这一步是将hexo和Github关联起来，在你的博客根目录（我的是：blog）下找到 _config.yml， 可以用记事本或者其他编辑工具打开，在最下方找到： deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master repo中yourname是你的用户名。也可以如下获取： 注:配置文件里面所有 : 后面都有一个空格，没有会出错。 Step2：开始部署 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。在根目录下的git bash中输入： npm install hexo-deployer-git --save 然后接着逐次输入： hexo clean hexo g hexo d 注:输入hexo d时可能有时会跳出窗口要你输入username和password。 这个时候在你的github仓库中你会发现会出现跟你博客根目录一样的文件，你的根目录上的文件已经部署到你的github仓库上了。 打开浏览器，输入xxxx.github.io，这里请按照 你的github用户名.github.io 输入，就可以访问你的博客啦。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:47:34 "},"PublishArticle.html":{"url":"PublishArticle.html","title":"七.发布文章","keywords":"","body":" 7.发布文章 Step1：编写博客 Step2：上传到github 7.发布文章 概要 1.首先，你需要了解markdown语法，如果不了解可以百度Markdown 2.主题默认文章Hello World，但不同的Hexo主题md文件格式不一样 3.可以下载编辑器，推荐Typora，界面简洁，方便。 Step1：编写博客 首先我们看看在安装hexo默认主题landscape的默认文章 （在博客根目录下的 \\source\\_posts 下 ） --- title: Hello World --- Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues). ## Quick Start 如果没有下载编辑器，我们只需在_posts 下新建一个Hello World2.md文件，把文档前面的一部分copy来： --- title: Hello World --- title就是文章的标题，然后我们写一个Hello World2（可自行修改），并且写一点内容： --- title: Hello World2 --- ### 你好 这是我的第一篇博客 Step2：上传到github 然后在根目录下鼠标右击点git bash在窗口中依次输入： hexo clean hexo g hexo d 完成后，打开浏览器，输入xxxx.github.io（xxxx为你的用户名）就可以看到我们的文章了。 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:48:08 "},"HexoOrder.html":{"url":"HexoOrder.html","title":"八.Hexo常用命令","keywords":"","body":"八.Hexo常用命令 这些是常用的命令，希望对大家有所帮助。 hexo clean //清除缓存 hexo g //生成新数据 hexo d //部署 hexo s //启动本地服务预览 npm install hexo -g //安装Hexo npm update hexo -g //升级 hexo init #初始化博客 hexo server -p 5000 #更改端口 教程完 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:47:41 "},"Chart2.html":{"url":"Chart2.html","title":"第二章：主题与图床","keywords":"","body":"Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-09 17:36:42 "},"ThemeInstall.html":{"url":"ThemeInstall.html","title":"一.安装主题","keywords":"","body":" 一.安装主题 Step1：安装主题 一.安装主题 如果觉得默认的landscape主题不好看，那么可以在Hexo官方主题页，选择你喜欢的一个主题进行修改就可以啦。每个主题的使用方法略有不同，所以如果你是跟我一样的小白，建议使用流行热门的主题，这样出现问题网上基本都可以搜到解决方法。 Step1：安装主题 在这里我建议小白使用Next主题这个主题,因为这个主题网上的解决方法比较多，以便大家实现主题优化。这里我用的是Sakura主题，最初我用的是Next主题，因个人喜好换了一个偏二次元的主题，接下来的操作是我对Sakura主题的优化与操作。希望能帮助大家。 1.点击Hexo官方主题页 搜索Sakura，然后点击名字，点击图片是预览这个主题页面。 2.点击clone or download复制 3.在你的博客根目录下鼠标右击点击git bash，在窗口中输入： git clone git@github.com:honjun/hexo-theme-sakura.git 会接着显示如下： 1 | Cloning into 'themes/next'... 2 | remote: Enumerating objects: 8, done. 3 | remote: Counting objects: 100% (8/8), done. 4 | remote: Compressing objects: 100% (8/8), done. 5 | remote: Total 7195 (delta 0), reused 1 (delta 0), pack-reused 7187 6 | Receiving objects: 100% (7195/7195), 5.57 MiB | 652.00 KiB/s, done. 最后尾部会显示： Checking connectivity... done. 主题下载成功后存放如下目录：博客根目录themes/对应的主题文件夹名称（Sakura） Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:48:55 "},"CdnUse.html":{"url":"CdnUse.html","title":"二.图床使用","keywords":"","body":"二.图床使用 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:46:25 "},"Chart3.html":{"url":"Chart3.html","title":"第三章：优化","keywords":"","body":"Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-09 17:36:42 "},"ThemeUp.html":{"url":"ThemeUp.html","title":"一.主题优化","keywords":"","body":"一.主题优化 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:49:03 "},"PersonYuName.html":{"url":"PersonYuName.html","title":"二.设置个人域名","keywords":"","body":"二.设置个人域名 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:47:56 "},"CloudServeCreate.html":{"url":"CloudServeCreate.html","title":"三.云服务器搭建","keywords":"","body":"三.云服务器搭建 Copyright © tpjun.top 2020 all right reserved，powered by Gitbook该文章修订时间： 2020-04-11 17:46:47 "}}